[build-system]
requires = ["scikit-build-core>=0.10.0", "setuptools", "setuptools-scm", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "cppbinder"
description = "Binder, tool for automatic generation of Python bindings"
readme = "README.md"
dynamic = ["version"]
authors = [
    {name = "Rosetta Commons"},
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 2",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=2.7"

[project.urls]
Homepage = "https://github.com/RosettaCommons/binder/"
Documentation = "https://cppbinder.readthedocs.io/"
"Bug Tracker" = "https://github.com/RosettaCommons/binder/issues/"

[project.scripts]
binder = "binder:binder"

[tool.scikit-build]
minimum-version = "build-system.requires"
build-dir = "build/{wheel_tag}"

# Print verbose output
build.verbose = true
logging.level = "INFO"

# Dynamic versioning
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"

# Components to install and targets to build
install.components = ["binder"]
build.targets = ["binder"]

# Cmake defines
cmake.define.LLVM_ENABLE_EH = "ON"
cmake.define.LLVM_ENABLE_RTTI = "ON"
cmake.define.LLVM_ENABLE_PROJECTS = "clang"

# Wheel configuration
wheel.packages = ["binder"]
wheel.install-dir = "binder"
wheel.py-api = "py2.py3"
wheel.expand-macos-universal-tags = true

[tool.cibuildwheel]
build = "cp313-*"
build-verbosity = 1
test-requires = ["pytest"]
test-command = "pytest {package}/tests"
musllinux-x86_64-image = "musllinux_1_1"
musllinux-i686-image = "musllinux_1_1"
musllinux-aarch64-image = "musllinux_1_1"
musllinux-ppc64le-image = "musllinux_1_1"
musllinux-s390x-image = "musllinux_1_1"

[tool.cibuildwheel.macos]
archs = ["universal2"]

[tool.setuptools_scm]
root = ".."
git_describe_command = ["git", "describe", "--long", "--tags", "--match", "*[0-9]*"]
